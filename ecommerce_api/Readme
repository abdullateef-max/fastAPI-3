# E-Commerce API with FastAPI
A modular FastAPI-based e-commerce API with shopping cart, checkout system, and JWT authentication.

Features
JWT Authentication: Secure user authentication with JSON Web Tokens

Product Management: CRUD operations for products (admin only)

Shopping Cart: Add products to cart and manage quantities

Checkout System: Process orders and update inventory

Order Backup: Automatically save orders to orders.json

Response Time Middleware: Measures and adds response time to headers

Modular Structure: Organized with routers and separate modules

Installation
Clone the repository

bash
git clone https://github.com/abdullateef-max/fastAPI-3.git
cd ecommerce_api
Create virtual environment

bash
python -m venv .venv
source .venv/bin/activate  
Install dependencies

bash
pip install -r requirements.txt
Run the application

bash
# Option 1: Using uvicorn directly
uvicorn main:app 

# Option 2: Using Python
python main.py
Access the API

API: http://localhost:8000

Interactive Docs: http://localhost:8000/docs

Alternative Docs: http://localhost:8000/redoc

Default Users
The application automatically creates a default admin user on startup:

Admin User:

Username: admin

Password: admin123

Email: admin@example.com

Has admin privileges

API Endpoints
Authentication Endpoints
Method	Endpoint	Description	Authentication
POST	/users/register	Register new user	None
POST	/users/token	Login and get JWT token	None
Product Endpoints
Method	Endpoint	Description	Authentication
GET	/products/	Get all products	None
POST	/products/	Create new product	Admin only
POST	/admin/products/	Create new product (admin)	Admin only
Cart Endpoints
Method	Endpoint	Description	Authentication
POST	/cart/add	Add product to cart	User
POST	/cart/checkout	Checkout and create order	User

Usage with Postman
1. Register a User
POST http://localhost:8000/users/register

json
{
    "username": "testuser",
    "email": "test@example.com",
    "password": "password123"
}
2. Get JWT Token
POST http://localhost:8000/users/token

json
{
    "username": "testuser",
    "password": "password123"
}
Response will include an access token:

json
{
    "access_token": "eyJhbGciOiJIUzI1NiIs...",
    "token_type": "bearer"
}
3. Create Products (Admin)
POST http://localhost:8000/admin/products/
Headers:

Authorization: Bearer <ADMIN_TOKEN>

Body (form-data):

name: Laptop

price: 999.99

stock: 10

4. Get Products
GET http://localhost:8000/products/
No authentication required

5. Add to Cart
POST http://localhost:8000/cart/add
Headers:

Authorization: Bearer <USER_TOKEN>

Body (form-data):

product_id: 1

quantity: 2